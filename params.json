{"name":"Bee","tagline":"database changes manager","body":"# Bee\r\n\r\nA tool for managing database changes. Works with Oracle and MySQL.\r\n\r\nNote: the use with ANT is deprecated, the most recent version uses MAVEN.\r\n\r\n## Modules\r\n\r\n* Schema - Validation of the structures of the tables, indexes, packages, etc.\r\n* Data - Validation of core data tables.\r\n* Dbchange - Execute some change on tables, like \"ruby migrations\".\r\n\r\n## How to Install\r\n\r\nDownload the binary distribution and unzip it. There are 2 folders: `bin` and `lib`.\r\n\r\nPut your jdbc jar into the `lib` folder.\r\n\r\n## Configuration\r\n\r\nAll modules use by the file \"bee.properties\" by default. This file contains the database connection settings. There may be several database configurations inside this file.\r\n\r\nYou can also specify an alternate configuration file using the -DdatabaseConfig = `<file>`.\r\n\r\n     The file structure is as follows: \r\n\r\n          <conf>.driver=<driver>\r\n\r\n          <conf>.url=<url>\r\n\r\n          <conf>.user=<user>\r\n\r\n          <conf>.password=<password>\r\n\r\n          <conf> - configuration name to be used.\r\n          <driver> - jdbc driver class.\r\n          <url> - url of the database connection.\r\n          <user> - user connection.\r\n          <password> - connection password.\r\n\r\n      Example:\r\n            Configuring a database called 'delta'.\r\n                  delta.driver=oracle.jdbc.OracleDriver\r\n                  delta.url=jdbc:oracle:thin:@server:1111:delta\r\n                  delta.user=delta123\r\n                  delta.password=delta123\r\n\r\n## Schema\r\n\r\nThe module checks the schema structure of the database, comparing with existing files in the project. These files are in the bee project, inside specific subdirectories for each type of structure.\r\n\r\n   * tables - structure of tables, indexes and constraints.\r\n   * triggers\r\n   * packages\r\n   * procedures - procedures and functions.\r\n   * views\r\n   * sequences.bee - file containing all sequences\r\n\r\n### Commands\r\n\r\n      To create a file\r\n         bee schema:generate <database> <object>\r\n\r\n      To create all files from a specific schema\r\n         bee schema:generate <database>\r\n\r\n      To validate one file\r\n         bee schema:validate <database> <object>\r\n\r\n      To validate all files\r\n         bee schema:validate <database>\r\n\r\n      To create a MySql DDL script from local structure files. Will create a file named `bee.sql`\r\n         bee schema:recreate_mysql <object>\r\n\r\n      To create a Oracle DDL script from local structure files. Will create a file named `bee.sql`\r\n         bee schema:recreate_oracle <object>\r\n\r\n\r\n## Data\r\n\r\nThis module checks the 'core' data from the database.\r\n\r\nCore data files are in the directory bee/data, and use a CSV format.\r\n\r\n### Commands\r\n\r\n        To create a data file\r\n            bee data:generate <database> <object>\r\n\r\n        To validate all core tables\r\n            bee data:validate <database>\r\n\r\n        To validate one core table\r\n            bee data:validate <database> <object>\r\n\r\n\r\n## Dbchange\r\n\r\nThe Dbchange module performs the task of changing the database, following the concepts of ruby migrations. The update module will check which scripts to be executed and then execute them in chronological order.\r\n\r\n\r\nEach file represents one or more changes in the database and the file name follows the format:\r\n\r\n      code timestamp + description + .dbchange\r\n\r\n\r\nThe contents of the file consists of comments, update scripts and rollback scripts. Example:\r\n\r\n    -- comment script\r\n\r\n    ::up\r\n\r\n        command to update the database;\r\n        command to update the database;\r\n        command to update the database;\r\n\r\n\r\n    ::down\r\n        \r\n        command to reverse the database;\r\n        command to reverse the database;\r\n        command to reverse the database;\r\n\r\n\r\nNote:  when there is no rollback commands section: down should be removed, including its header. This will indicate there is no way to reverse the script.\r\n\r\n### Commands\r\n\r\n        To create a dbchange\r\n            bee dbchange:create <description of file>\r\n\r\n        To verify the status of dbchanges in database (dbchanges implemented and not implemented).\r\n            bee dbchange:status <database>\r\n\r\n        To apply all dbchanges\r\n            bee dbchange:up <database>\r\n\r\n        To apply one dbchange (up)\r\n            bee dbchange:up <database> <name of file> Example: 1311201110120100-easter_egg.dbchange\r\n\r\n        To apply one dbchange (down)\r\n            bee dbchange:down <database> <name of file>\r\n            \r\n        To mark a dbchange as implemented\r\n        \tbee dbchange:mark <database> <name of file>\r\n        \t\r\n        To mark all dbchanges as implemented\r\n        \tbee dbchange:markall <database>\r\n        \t\r\n        To unmark a dbchange as implemented (or mark as not implemented)\r\n        \tbee dbchange:mark <database> <name of file>\r\n\r\n\r\n## Known Issues\r\n\r\n* The `dbschema:generate` and `dbchema:validate` only works on Oracle and MySql databases\r\n* Windows .bat script doesn't scan for lib jars, so you need to set the CLASSPATH variable manually.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}